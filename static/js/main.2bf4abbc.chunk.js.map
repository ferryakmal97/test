{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","getValue","obj","x","useEffect","fetch","headers","Accept","then","response","json","myJson","proformaItem","map","value","total_stock","JSON","parse","product_stock","reduce","total","arr","location","id","find","item","items","catch","err","console","log","Table","striped","bordered","hover","responsive","name","index","categoryDescription","productDescription","qty","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAgGeA,EA3FH,WAAO,IAAD,IAChB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAW,SAACC,GAChB,IAAK,IAAIC,KAAKD,EACZ,OAAOA,EAAIC,IA8Cf,OAlCAC,qBAAU,WACRC,MAAM,YAAa,CACjBC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLX,EAAQ,2BACHW,GADE,IAELC,aAAcD,EAAOC,aAAaC,KAAI,SAACC,GACrC,OAAO,2BACFA,GADL,IAEEC,YAAaC,KAAKC,MAAMH,EAAMI,eAAeC,QAC3C,SAACC,EAAON,GACN,OAAOM,EAAQnB,EAASa,KAE1B,GAEFI,eA9BWG,EA+BTL,KAAKC,MAAMH,EAAMI,eA/BHI,EAgCdX,EAAOW,SA/BZA,EAAST,KAAI,SAACC,GACnB,OAAO,eACJA,EAAMS,GAAKtB,EAASoB,EAAIG,MAAK,SAACC,GAAD,OAAUA,EAAKX,EAAMS,SAAS,OA+BtDG,MAAOV,KAAKC,MAAMH,EAAMY,SAlCd,IAACL,EAAKC,WAuCvBK,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAEI7B,EACL,eAACgC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACE,gCACE,+BACE,qCADF,UAEGpC,EAAKuB,gBAFR,aAEG,EAAeT,KAAI,SAACC,GACnB,OAAO,6BAAoBA,EAAMsB,MAAjBtB,EAAMS,OAExB,0CACA,yCACA,6CACA,2CACA,kDAGJ,0CACGxB,EAAKa,oBADR,aACG,EAAmBC,KAAI,SAACC,EAAOuB,GAC9B,OACE,+BACE,6BAAKA,EAAQ,IACZvB,EAAMI,cAAcL,KAAI,SAACC,GACxB,OAAO,6BAAKb,EAASa,QAEvB,6BAAKA,EAAMwB,sBACX,6BAAKxB,EAAMyB,qBACX,6BAAKzB,EAAMC,cACX,gCACKD,EAAMY,MAAM,GAAGc,IAAM1B,EAAMC,YAAe,KAAK0B,QAAQ,GAD5D,QAGA,6BAAK3B,EAAMY,MAAM,GAAGc,QAXbH,WAkBjB,gDChFWK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2bf4abbc.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst App = () => {\n  const [data, setData] = useState({});\n\n  const getValue = (obj) => {\n    for (let x in obj) {\n      return obj[x];\n    }\n  };\n\n  const validateStock = (arr, location) => {\n    return location.map((value) => {\n      return {\n        [value.id]: getValue(arr.find((item) => item[value.id])) || 0,\n      };\n    });\n  };\n\n  useEffect(() => {\n    fetch(\"data.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((myJson) => {\n        setData({\n          ...myJson,\n          proformaItem: myJson.proformaItem.map((value) => {\n            return {\n              ...value,\n              total_stock: JSON.parse(value.product_stock).reduce(\n                (total, value) => {\n                  return total + getValue(value);\n                },\n                0\n              ),\n              product_stock: validateStock(\n                JSON.parse(value.product_stock),\n                myJson.location\n              ),\n              items: JSON.parse(value.items),\n            };\n          }),\n        });\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return data ? (\n    <Table striped bordered hover responsive>\n      <thead>\n        <tr>\n          <th>No.</th>\n          {data.location?.map((value) => {\n            return <th key={value.id}>{value.name}</th>;\n          })}\n          <th>Category</th>\n          <th>Product</th>\n          <th>Total Stock</th>\n          <th>Percent %</th>\n          <th>Total Order</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.proformaItem?.map((value, index) => {\n          return (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              {value.product_stock.map((value) => {\n                return <td>{getValue(value)}</td>;\n              })}\n              <td>{value.categoryDescription}</td>\n              <td>{value.productDescription}</td>\n              <td>{value.total_stock}</td>\n              <td>\n                {((value.items[0].qty / value.total_stock) * 100).toFixed(2)} %\n              </td>\n              <td>{value.items[0].qty}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  ) : (\n    <p>Tidak ada data</p>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}